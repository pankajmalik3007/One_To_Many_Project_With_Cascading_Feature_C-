// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using O_T_M_POPUP_WITHCASCADE_SP.Models.context;

#nullable disable

namespace O_T_M_POPUP_WITHCASCADE_SP.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("City Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(100)")
                        .HasColumnName("City Name");

                    b.Property<int>("StateId")
                        .HasColumnType("INT");

                    b.HasKey("CityId")
                        .HasName("pk_City_Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Country Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)")
                        .HasColumnName("Country Name");

                    b.HasKey("CountryId")
                        .HasName("pk_CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.Department", b =>
                {
                    b.Property<int>("Dep_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Dept Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dep_ID"));

                    b.Property<string>("Dep_Name")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)")
                        .HasColumnName("Department Name");

                    b.HasKey("Dep_ID")
                        .HasName("pk_Dep_Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.Employee", b =>
                {
                    b.Property<int>("Emp_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Employee Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Emp_ID"));

                    b.Property<int>("CityId")
                        .HasColumnType("INT");

                    b.Property<int>("CountryId")
                        .HasColumnType("INT");

                    b.Property<int>("Dep_ID")
                        .HasColumnType("INT");

                    b.Property<string>("Emp_name")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)")
                        .HasColumnName("Employee Name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("NVarchar(500)")
                        .HasColumnName("Employee PhNo");

                    b.Property<string>("Sallary")
                        .IsRequired()
                        .HasColumnType("NVarchar(500)")
                        .HasColumnName("Employee Address");

                    b.Property<int>("StateId")
                        .HasColumnType("INT");

                    b.HasKey("Emp_ID")
                        .HasName("pk_Employee_Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("Dep_ID");

                    b.HasIndex("StateId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("State Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("INT");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(100)")
                        .HasColumnName("State Name");

                    b.HasKey("StateId")
                        .HasName("pk_StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.City", b =>
                {
                    b.HasOne("O_T_M_POPUP_WITHCASCADE_SP.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.Employee", b =>
                {
                    b.HasOne("O_T_M_POPUP_WITHCASCADE_SP.Models.City", "City")
                        .WithMany("Employees")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("O_T_M_POPUP_WITHCASCADE_SP.Models.Country", "Country")
                        .WithMany("employees")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("O_T_M_POPUP_WITHCASCADE_SP.Models.Department", "department")
                        .WithMany("Employees")
                        .HasForeignKey("Dep_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("O_T_M_POPUP_WITHCASCADE_SP.Models.State", "State")
                        .WithMany("Employees")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("State");

                    b.Navigation("department");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.State", b =>
                {
                    b.HasOne("O_T_M_POPUP_WITHCASCADE_SP.Models.Country", "Country")
                        .WithMany("states")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.City", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.Country", b =>
                {
                    b.Navigation("employees");

                    b.Navigation("states");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("O_T_M_POPUP_WITHCASCADE_SP.Models.State", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
